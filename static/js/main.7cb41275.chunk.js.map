{"version":3,"sources":["Sounds/Energy.ts","Sounds/EnergyGenerator.ts","Effects/GameTick.ts","Effects/EnergyGenerator.ts","Sounds/LevelUp.ts","Screens/Game.tsx","Effects/Energy.ts","Effects/Level.ts","Screens/Welcome.tsx","App.tsx","index.tsx"],"names":["Pizzicato","volume","sound","Sound","source","options","frequency","addEffect","Effects","Distortion","gain","Reverb","time","decay","reverse","mix","play","stop","Delay","feedback","callbacks","Map","doGameTick","forEach","callback","window","setTimeout","useEnergyGenerator","energy","setEnergy","consumption","useState","generatedEnergy","setGeneratedEnergy","useEffect","EnergyGeneratorSound","navigator","getUserMedia","audio","stream","audioContent","AudioContext","audioStream","createMediaStreamSource","analyser","createAnalyser","connect","fftSize","frequencyArray","Uint8Array","frequencyBinCount","check","requestAnimationFrame","getByteFrequencyData","Math","floor","savedCallback","useRef","current","timestamp","Date","now","set","delete","useGameTick","newEnergy","styles","StyleSheet","create","container","display","flexDirection","padding","header","alignItems","height","headerTitle","flex","headerStats","main","energyContainer","position","width","border","borderRadius","backgroundImage","backgroundSize","energyIndicator","backgroundColor","bottom","left","right","transform","transformOrigin","transition","energySourceContainer","justifyContent","energySource","Game","EnergySound","useEnergy","level","setLevel","LevelUpSound","useLevel","residents","setResidents","wattsPerResident","className","css","style","textAlign","Welcome","onStart","onClick","App","hasStarted","setHasStarted","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7cb41275.chunk.js","sourcesContent":["// @ts-ignore\r\nimport Pizzicato from 'pizzicato';\r\n\r\nPizzicato.volume = 0.5;\r\n\r\nconst sound = new Pizzicato.Sound({\r\n  source: 'wave',\r\n  options: {\r\n    frequency: 100,\r\n    volume: 0.2,\r\n  },\r\n});\r\n\r\nsound.addEffect(\r\n  new Pizzicato.Effects.Distortion({\r\n    gain: 0.2,\r\n  })\r\n);\r\n\r\nsound.addEffect(\r\n  new Pizzicato.Effects.Reverb({\r\n    time: 1,\r\n    decay: 0.8,\r\n    reverse: true,\r\n    mix: 0.5,\r\n  })\r\n);\r\n\r\nexport default {\r\n  play: () => sound.play(),\r\n  stop: () => sound.stop(),\r\n  setFrequency: (frequency: number) => (sound.frequency = frequency),\r\n};\r\n","// @ts-ignore\r\nimport Pizzicato from 'pizzicato';\r\n\r\nconst sound = new Pizzicato.Sound({\r\n  source: 'input',\r\n});\r\n\r\nsound.addEffect(\r\n  new Pizzicato.Effects.Distortion({\r\n    gain: 1,\r\n  })\r\n);\r\n\r\nsound.addEffect(\r\n  new Pizzicato.Effects.Delay({\r\n    feedback: 0.6,\r\n    time: 0.4,\r\n    mix: 0.5,\r\n  })\r\n);\r\n\r\nexport default {\r\n  play: () => sound.play(),\r\n  stop: () => sound.stop(),\r\n};\r\n","import { useEffect, useRef } from 'react';\r\n\r\nconst callbacks = new Map();\r\n\r\nconst doGameTick = () => {\r\n  callbacks.forEach(callback => callback());\r\n  window.setTimeout(doGameTick, 1000);\r\n};\r\n\r\ndoGameTick();\r\n\r\nexport const useGameTick = (callback: () => void) => {\r\n  const savedCallback = useRef<(...args: any[]) => void>();\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  useEffect(() => {\r\n    const timestamp = Date.now();\r\n    const handler = (...args: any[]) => savedCallback.current && savedCallback.current(...args);\r\n\r\n    callbacks.set(timestamp, handler);\r\n\r\n    return () => {\r\n      callbacks.delete(timestamp);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport EnergyGeneratorSound from '../Sounds/EnergyGenerator';\r\nimport { useGameTick } from './GameTick';\r\n\r\nexport const useEnergyGenerator = (\r\n  energy: number,\r\n  setEnergy: React.Dispatch<React.SetStateAction<number>>,\r\n  consumption: number\r\n) => {\r\n  const [generatedEnergy, setGeneratedEnergy] = useState(10);\r\n\r\n  useEffect(() => {\r\n    EnergyGeneratorSound.play();\r\n\r\n    navigator.getUserMedia(\r\n      { audio: true },\r\n      stream => {\r\n        const audioContent = new AudioContext();\r\n        const audioStream = audioContent.createMediaStreamSource(stream);\r\n        const analyser = audioContent.createAnalyser();\r\n\r\n        audioStream.connect(analyser);\r\n        analyser.fftSize = 1024;\r\n\r\n        const frequencyArray = new Uint8Array(analyser.frequencyBinCount);\r\n\r\n        const check = () => {\r\n          requestAnimationFrame(check);\r\n          analyser.getByteFrequencyData(frequencyArray);\r\n\r\n          const generatedEnergy = frequencyArray[0];\r\n          setGeneratedEnergy(Math.floor(generatedEnergy / 2));\r\n        };\r\n\r\n        check();\r\n      },\r\n      () => {}\r\n    );\r\n\r\n    return () => {\r\n      EnergyGeneratorSound.stop();\r\n    };\r\n  }, []);\r\n\r\n  useGameTick(() => {\r\n    const newEnergy = energy + generatedEnergy - consumption;\r\n\r\n    if (newEnergy >= 100) {\r\n      setEnergy(100);\r\n      return;\r\n    }\r\n\r\n    if (newEnergy <= 0) {\r\n      setEnergy(0);\r\n      return;\r\n    }\r\n\r\n    setEnergy(newEnergy);\r\n  });\r\n\r\n  return generatedEnergy;\r\n};\r\n","// @ts-ignore\r\nimport Pizzicato from 'pizzicato';\r\n\r\nconst sound = new Pizzicato.Sound('./assets/sounds/level-up.wav');\r\n\r\nsound.addEffect(\r\n  new Pizzicato.Effects.Delay({\r\n    feedback: 0.6,\r\n    time: 0.4,\r\n    mix: 0.5,\r\n  })\r\n);\r\n\r\nexport default {\r\n  play: () => sound.play(),\r\n  stop: () => sound.stop(),\r\n};\r\n","import { css, StyleSheet } from 'aphrodite/no-important';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useEnergy } from '../Effects/Energy';\r\nimport { useEnergyGenerator } from '../Effects/EnergyGenerator';\r\nimport { useLevel } from '../Effects/Level';\r\n\r\nconst Game: React.FC = () => {\r\n  const { energy, setEnergy } = useEnergy();\r\n  const level = useLevel(energy);\r\n  const [residents, setResidents] = useState(1);\r\n  const [wattsPerResident, setWattsPerResident] = useState(5);\r\n  const generatedEnergy = useEnergyGenerator(energy, setEnergy, residents * wattsPerResident);\r\n\r\n  useEffect(() => {\r\n    setResidents(level);\r\n  }, [level]);\r\n\r\n  return (\r\n    <div className={css(styles.container)}>\r\n      <header className={css(styles.header)}>\r\n        <h1 className={css(styles.headerTitle)}>Overtone Reactor</h1>\r\n        <div className={css(styles.headerStats)}>\r\n          <div>Residents: {residents}</div>\r\n          <div>Watts per Resident: {wattsPerResident}</div>\r\n        </div>\r\n      </header>\r\n      <main className={css(styles.main)}>\r\n        <div className={css(styles.energyContainer)}>\r\n          <div className={css(styles.energyIndicator)} style={{ transform: `scale3d(1, ${energy}, 1)` }} />\r\n        </div>\r\n        <div className={css(styles.energySourceContainer)}>\r\n          <div\r\n            className={css(styles.energySource)}\r\n            style={{ transform: `scale3d(${generatedEnergy}, ${generatedEnergy}, 1)` }}\r\n          />\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: 20,\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: 100,\r\n  },\r\n  headerTitle: {\r\n    flex: 1,\r\n  },\r\n  headerStats: {},\r\n  main: {\r\n    display: 'flex',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n  },\r\n  energyContainer: {\r\n    position: 'relative',\r\n    width: 100,\r\n    height: 500,\r\n    border: '2px solid #FFFFFF',\r\n    borderRadius: 5,\r\n    backgroundImage: 'url(assets/images/glass.jpg)',\r\n    backgroundSize: 'cover',\r\n  },\r\n  energyIndicator: {\r\n    backgroundColor: '#03fc39',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    height: 5,\r\n    transform: 'scale3d(1, 1, 1)',\r\n    transformOrigin: 'bottom',\r\n    transition: 'transform 1s',\r\n  },\r\n  energySourceContainer: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  energySource: {\r\n    width: 2,\r\n    height: 2,\r\n    borderRadius: 1,\r\n    backgroundColor: '#EB4034',\r\n    transform: 'scale3d(1, 1, 1)',\r\n    transition: 'transform 1s',\r\n  },\r\n});\r\n\r\nexport default Game;\r\n","import { useEffect, useState } from 'react';\r\nimport EnergySound from '../Sounds/Energy';\r\n\r\nexport const useEnergy = () => {\r\n  const [energy, setEnergy] = useState(50);\r\n\r\n  useEffect(() => {\r\n    EnergySound.play();\r\n\r\n    return () => {\r\n      EnergySound.stop();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    EnergySound.setFrequency(energy + 100);\r\n  }, [energy]);\r\n\r\n  return { energy, setEnergy };\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport LevelUpSound from '../Sounds/LevelUp';\r\n\r\nexport const useLevel = (energy: number) => {\r\n  const [level, setLevel] = useState(1);\r\n\r\n  useEffect(() => {\r\n    if (energy < 100) {\r\n      return;\r\n    }\r\n\r\n    setLevel(level => level + 1);\r\n    LevelUpSound.play();\r\n  }, [energy]);\r\n\r\n  return level;\r\n};\r\n","import { css, StyleSheet } from 'aphrodite/no-important';\r\nimport React from 'react';\r\n\r\nconst Welcome: React.FC<{ onStart: () => void }> = ({ onStart }) => {\r\n  return (\r\n    <div className={css(styles.container)}>\r\n      <h1>Overtone Reactor</h1>\r\n      <p>Welcome to the Overtone Reactor. Use your voice as a reactor to provide energy to your residents.</p>\r\n      <button onClick={onStart}>Start</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    textAlign: 'center',\r\n    padding: 20,\r\n  },\r\n});\r\n\r\nexport default Welcome;\r\n","import React, { useState } from 'react';\nimport Game from './Screens/Game';\nimport Welcome from './Screens/Welcome';\n\nconst App: React.FC = () => {\n  const [hasStarted, setHasStarted] = useState(false);\n\n  if (!hasStarted) {\n    return <Welcome onStart={() => setHasStarted(true)} />;\n  }\n\n  return <Game />;\n};\n\nexport default App;\n","import 'normalize.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}